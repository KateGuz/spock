<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
    <bean id="getLotsStatementSQL" class="java.lang.String">
        <constructor-arg value="SELECT  l.id, l.title, l.startDate, l.endDate, l.startPrice, l.quickBuyPrice, l.type, l.maxBidId, b.bid AS maxBidValue
                                FROM lot AS l
                                left JOIN bid AS b ON b.id=l.maxBidId"/>
    </bean>

    <bean id="getLotsByCategoryStatementSQL" class="java.lang.String">
        <constructor-arg value=" JOIN category AS c ON l.categoryId=c.id
                                WHERE  (c.parentId =:categoryId OR c.id =:categoryId)"/>
    </bean>

    <bean id="getLotCountStatementSQL" class="java.lang.String">
    <constructor-arg value="SELECT COUNT(*) FROM lot AS l"/>

</bean>
    <bean id="getLotsByUserIdSQL" class="java.lang.String">
        <constructor-arg value="SELECT  l.id, l.title, l.startDate, l.endDate, l.startPrice, l.quickBuyPrice, l.type, l.maxBidId, b.bid AS maxBidValue
                                FROM lot AS l
                                left JOIN bid AS b ON b.id=l.maxBidId
                                JOIN user AS u ON l.userId=u.id
                                WHERE  u.id =:userId;"/>
    </bean>
    <bean id="getLotByIdSQL" class="java.lang.String">
        <constructor-arg value="SELECT l.id, l.title, l.description, l.categoryId, c.parentId AS parentCategoryId, c.name AS categoryName, cp.name AS parentCategoryName,
                                l.userId, u.name AS userName, l.startDate, l.endDate, l.startPrice, l.minStep,
                                l.quickBuyPrice, l.type, l.maxBidId, b.bid AS maxBidValue
                                FROM lot AS l
                                JOIN user AS u ON u.id=l.userId
                                JOIN category AS c ON c.id=l.categoryId
                                JOIN category AS cp ON cp.id=c.parentId
                                left JOIN bid as b ON b.id=l.maxBidId
                                WHERE l.id =:lotId;"/>
    </bean>

    <bean id="getBidCountByLotIdSQL" class="java.lang.String">
        <constructor-arg value="SELECT COUNT(*) FROM bid WHERE lotId =:lotId;"/>
    </bean>
    <bean id="getAllCategoriesSQL" class="java.lang.String">
        <constructor-arg value="SELECT c.id, c.name, c.parentId, p.name AS parentName FROM category AS c
                                JOIN category AS p ON p.id=c.parentId ORDER BY p.id;"/>
    </bean>
    <bean id="getUserSQL" class="java.lang.String">
        <constructor-arg value="SELECT u.id, u.name,u.email,u.password, u.registrationDate, u.type FROM user AS u WHERE u.name =:name AND u.password =:password;"/>
    </bean>
    <bean id="addUserSQL" class="java.lang.String">
        <constructor-arg value="INSERT INTO user (name,password,email,type) VALUES (:name, :password, :email, :type);"/>
    </bean>
    <bean id="addLotSQL" class="java.lang.String">
        <constructor-arg value="INSERT INTO lot (title,description,categoryId,startDate,endDate,startPrice,minStep,quickBuyPrice,userId,type) VALUES (:title, :description, :categoryId, :startDate, :endDate, :startPrice, :minStep, :quickBuyPrice, :userId, :type);"/>
    </bean>
    <bean id="getUserByIdSQL" class="java.lang.String">
        <constructor-arg
                value="SELECT u.id, u.name,u.email,u.password, u.registrationDate, u.type FROM user AS u WHERE u.id = :id;"/>
    </bean>
    <bean id="editUserSQL" class="java.lang.String">
        <constructor-arg value="UPDATE  user SET name=:name, email=:email, password =:password WHERE id=:id;"/>
    </bean>
    <bean id="deleteLotSQL" class="java.lang.String">
        <constructor-arg value="DELETE FROM lot WHERE id =:lotId;"/>
    </bean>
    <bean id="editLotSQL" class="java.lang.String">
        <constructor-arg value="UPDATE lot SET title=:title, description=:description, categoryId=:categoryId,
                                startDate=:startDate, endDate=:endDate, startPrice=:startPrice, minStep=:minStep,
                                quickBuyPrice=:quickBuyPrice, type=:type WHERE id=:id;"/>
    </bean>
    <bean id="placeBidSQL" class="java.lang.String">
        <constructor-arg value="INSERT INTO bid (lotId, userId, bid) VALUES (:lotId, :userId, :bid);"/>
    </bean>
    <bean id="updateMaxBidIdSQL" class="java.lang.String">
        <constructor-arg value="UPDATE lot SET maxBidId=:bidId WHERE id=:id;"/>
    </bean>
    <bean id="changeLotTypeSQL" class="java.lang.String">
        <constructor-arg value="UPDATE lot SET type=:type WHERE id=:id;"/>
    </bean>

    <bean id="getLotsForReportStatementSQL" class="java.lang.String">
        <constructor-arg value="SELECT l.id, l.title, l.description, l.categoryId, c.parentId AS parentCategoryId, c.name AS categoryName, cp.name AS parentCategoryName,
                                l.userId, u.name AS userName, l.startDate, l.endDate, l.startPrice, l.minStep,
                                l.quickBuyPrice, l.type, l.maxBidId, b.bid AS maxBidValue
                                FROM lot AS l
                                 JOIN user AS u ON u.id=l.userId
                                JOIN category AS c ON c.id=l.categoryId
                                JOIN category AS cp ON cp.id=c.parentId
                                left JOIN bid as b ON b.id=l.maxBidId
                                 "/>
    </bean>
    <bean id="saveReportSQL" class="java.lang.String">
        <constructor-arg value="INSERT INTO report (report) VALUES (:report);"/>
    </bean>
    <bean id="getReportSQL" class="java.lang.String">
        <constructor-arg value="SELECT report FROM report WHERE id=:reportId;"/>
    </bean>
    <bean id="cleanReportsSQL" class="java.lang.String">
        <constructor-arg value="DELETE FROM report;"/>
    </bean>
    <bean id="getPendingLotsForProcessingSQL" class="java.lang.String">
        <constructor-arg value="SELECT l.id, l.title, l.userId, u.name AS userName, u.email AS userEmail, l.startDate,
                                l.endDate, l.type, l.maxBidId, b.bid AS maxBidValue, b.userId AS maxBidUserId,
                                mbu.name AS maxBidUserName, mbu.email AS maxBidUserEmail
                                FROM lot AS l JOIN user AS u ON u.id=l.userId left JOIN bid as b ON b.id=l.maxBidId
                                LEFT JOIN user AS mbu ON mbu.id=b.userId
                                WHERE (l.startDate >= :startPeriod AND l.startDate &lt; :endPeriod);"/>
    </bean>
    <bean id="getOverduePendingLotsForProcessingSQL" class="java.lang.String">
        <constructor-arg value="SELECT l.id, l.title, l.userId, u.name AS userName, u.email AS userEmail, l.startDate,
                                l.endDate, l.type, l.maxBidId, b.bid AS maxBidValue, b.userId AS maxBidUserId,
                                mbu.name AS maxBidUserName, mbu.email AS maxBidUserEmail
                                FROM lot AS l JOIN user AS u ON u.id=l.userId left JOIN bid as b ON b.id=l.maxBidId
                                LEFT JOIN user AS mbu ON mbu.id=b.userId
                                WHERE (l.startDate &lt; :endPeriod AND l.type='P');"/>
    </bean>
    <bean id="getStartedLotsForProcessingSQL" class="java.lang.String">
        <constructor-arg value="select l.id, l.endDate FROM lot AS l WHERE (l.endDate >= :startPeriod AND l.endDate &lt; :endPeriod);"/>
    </bean>
    <bean id="getOverdueStartedLotsForProcessingSQL" class="java.lang.String">
        <constructor-arg value="select l.id, l.endDate FROM lot AS l WHERE (l.endDate &lt; :endPeriod AND l.type='I');"/>
    </bean>
    <bean id="getClosedLotForNotificationSQL" class="java.lang.String">
        <constructor-arg value="SELECT l.id, l.title, l.userId, u.name AS userName, u.email AS userEmail, l.startDate,
                                l.endDate, l.type, l.maxBidId, b.bid AS maxBidValue, b.userId AS maxBidUserId,
                                mbu.name AS maxBidUserName, mbu.email AS maxBidUserEmail
                                FROM lot AS l JOIN user AS u ON u.id=l.userId left JOIN bid as b ON b.id=l.maxBidId
                                LEFT JOIN user AS mbu ON mbu.id=b.userId
                                WHERE l.id=:lotId;"/>
    </bean>
    <bean id="checkIfSubscribedSQL" class="java.lang.String">
        <constructor-arg value="SELECT COUNT(*) FROM subscribtion WHERE userId=:userId AND lotId=:lotId;"/>
    </bean>
    <bean id="subscribeSQL" class="java.lang.String">
        <constructor-arg value="INSERT INTO subscribtion (userId, lotId) VALUES (:userId, :lotId);"/>
    </bean>
    <bean id="unSubscribeSQL" class="java.lang.String">
        <constructor-arg value="DELETE FROM subscribtion WHERE userId=:userId AND lotId=:lotId;"/>
    </bean>
    <bean id="getUsersForNotificationSQL" class="java.lang.String">
        <constructor-arg value="SELECT u.email FROM subscribtion AS s JOIN user AS u ON u.id=s.userId
                                WHERE s.lotId=:lotId;"/>
    </bean>
</beans>